<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Dai, Yutong / 戴宇童</title>
    <link>/post/</link>
    <description>Recent content in Posts on Dai, Yutong / 戴宇童</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python Tricks Learned From Projects</title>
      <link>/post/python-tricks-learned-from-projects/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/python-tricks-learned-from-projects/</guid>
      <description>Table of Contents HAHAHUGOSHORTCODE-TOC0-HBHB
Show all submodules I need to import a particular function formulate from a file in the directory &amp;lt;path-to-the-package&amp;gt;/coinor/dippy/examples/milp/milp_func. It&amp;rsquo;s clear that I need to import it from the submodule coinor.dippy. But how to do it exactly? Use following commands, which list all submodules you can import.
import pkgutil import coinor.dippy package=coinor.dippy for importer, modname, ispkg in pkgutil.walk_packages(path=package.__path__, prefix=package.__name__+&#39;.&#39;, onerror=lambda x: None): print(modname)  Relavant outputs are</description>
    </item>
    
    <item>
      <title>Introduction to Mathematical Programming</title>
      <link>/post/ie406/lp/</link>
      <pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ie406/lp/</guid>
      <description> Some useful notes Farkas’s Lemma, Strong Duality and Criss-Cross Algorithm   </description>
    </item>
    
    <item>
      <title>中国传统计时</title>
      <link>/post/chinese-clock/chinese-time/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/chinese-clock/chinese-time/</guid>
      <description>中国传统计时单位 古时一天分12个时辰，采用地支作为时辰名称，分为
&#39;子&#39;, &#39;丑&#39;, &#39;寅&#39;, &#39;卯&#39; &#39;辰&#39;, &#39;巳&#39;, &#39;午&#39;, &#39;未&#39; &#39;申&#39;, &#39;酉&#39;, &#39;戌&#39;, &#39;亥&#39;  时辰的起点是午夜，即子初。
点击下图色块便可查看时间对应。 
附录
 参考文献:  国学网 新浪博客 博主知书少年果麦麦  用于绘图的Python代码  # using following code in jupyter notebook import plotly import plotly.graph_objs as go plotly.offline.init_notebook_mode(connected=True) colorPlate1 = [ &#39;#ffb3a7&#39;, &#39;#ffc773&#39;, &#39;#ffa400&#39;, &#39;#c9dd22&#39;, &#39;#afdd22&#39;, &#39;#cca4e3&#39;, &#39;#b0a4e3&#39;, &#39;#ffc64b&#39;, &#39;#ffb61e&#39;, &#39;#758a99&#39;, &#39;#6b6882&#39;, &#39;#ffb3a7&#39;, &#39;#f47983&#39;, &#39;#ffc773&#39;, &#39;#ffa400&#39;, &#39;#c9dd22&#39;, &#39;#afdd22&#39;, &#39;#cca4e3&#39;, &#39;#b0a4e3&#39;, &#39;#ffc64b&#39;, &#39;#ffb61e&#39;, &#39;#758a99&#39;, &#39;#6b6882&#39;, &#39;#f47983&#39; ] colorPlate2 = [&#39;#ff4e20&#39;, &#39;#ff7500&#39;, &#39;#789262&#39;, &#39;#8d4bbb&#39;, &#39;#e9bb1d&#39;,&#39;#50616d&#39;] * 2 theta_marker = [&amp;quot;{}:00&amp;quot;.</description>
    </item>
    
    <item>
      <title>Gradient Descent in Logistic Regression</title>
      <link>/post/gdlogistic/gradient-descent-in-logistic-regression/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/gdlogistic/gradient-descent-in-logistic-regression/</guid>
      <description>Table of Contents HAHAHUGOSHORTCODE-TOC0-HBHB
Problem Formulation There are commonly two ways of formulating the logistic regression problem, depending on the way we label the response variable $y$. Here we focus on the first formulation and defer the second formulation on the appendix.
First Formulation:
Consider restrict $y$ to {${-1,1}$}. Then we have $$ \begin{aligned} &amp;amp;\mathbb{P}(y=1|z)=\sigma(z)=\frac{1}{1 + e^{-z}}
&amp;amp;\mathbb{P}(y=-1|z)=\sigma(z)=\frac{1}{1 + e^z}, \end{aligned} $$ which can be compactly written as $$ \mathbb{P}(y|z)=\sigma(zy).</description>
    </item>
    
    <item>
      <title>Anomaly Detection</title>
      <link>/post/anomaly-detection/anomaly-detection/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/anomaly-detection/anomaly-detection/</guid>
      <description>Point Anomaly Detection - Grubbs’ test Grubbs’ test1 is commonly used technique to detect an outlier in univariate problem, where normality assumption is required. It can be formualted as either one-side testing problem or two-sided testing problem.
The hypothesis test is defined as
\[H_0: \text{There are no outlier in the data set} \quad H_1: \text{There is exactly one outlier in the data set}.\] For two-sided testing, it tries to determine whether the observation with the largest absolute deviation is an outlier, where the test statistic is defined as</description>
    </item>
    
    <item>
      <title>Decision Tree: How to find the path from the root to the desired terminal node</title>
      <link>/post/decison-tree-path/decision-tree-how-to-find-the-path-from-the-root-to-the-desired-terminal-node/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/decison-tree-path/decision-tree-how-to-find-the-path-from-the-root-to-the-desired-terminal-node/</guid>
      <description>Find terminal nodes in each tree of the built random forest that give the largest prediction. Then find paths from root to these selected terminal nodes and ensemble them to derive a decision region.</description>
    </item>
    
    <item>
      <title>Convergence Analysis for Block Coordinate Decent Algorithm and Powell&#39;s Examples</title>
      <link>/post/powell/convergence-analysis-for-block-coordinate-descent-algorithm-and-powells-examples/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/powell/convergence-analysis-for-block-coordinate-descent-algorithm-and-powells-examples/</guid>
      <description>Convergence analysis of Block coordinate decent with exact minimization.</description>
    </item>
    
  </channel>
</rss>