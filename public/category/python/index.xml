<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python | Dai, Yutong/ 戴宇童</title>
    <link>/category/python/</link>
      <atom:link href="/category/python/index.xml" rel="self" type="application/rss+xml" />
    <description>python</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020</copyright><lastBuildDate>Fri, 01 May 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>python</title>
      <link>/category/python/</link>
    </image>
    
    <item>
      <title>Python Tricks Learned From Projects</title>
      <link>/post/python-tricks-learned-from-projects/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/python-tricks-learned-from-projects/</guid>
      <description>&lt;h1 id=&#34;show-all-submodules&#34;&gt;Show all submodules&lt;/h1&gt;
&lt;p&gt;I need to import a particular function &lt;code&gt;formulate&lt;/code&gt; from a file in the directory &lt;code&gt;&amp;lt;path-to-the-package&amp;gt;/coinor/dippy/examples/milp/milp_func&lt;/code&gt;.
It&amp;rsquo;s clear that I need to import it from the submodule &lt;code&gt;coinor.dippy&lt;/code&gt;. But how to do it exactly?
Use following commands, which list all submodules you can import.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;pkgutil&lt;/span&gt;
&lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;coinor.dippy&lt;/span&gt;
&lt;span style=&#34;color:#268bd2&#34;&gt;package&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;coinor&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;dippy&lt;/span&gt;
&lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;importer&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;modname&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;ispkg&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;pkgutil&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;walk_packages&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;path&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;package&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;__path__&lt;/span&gt;,
                                                      &lt;span style=&#34;color:#268bd2&#34;&gt;prefix&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;package&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;__name__&lt;/span&gt;+&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;,
                                                      &lt;span style=&#34;color:#268bd2&#34;&gt;onerror&lt;/span&gt;=&lt;span style=&#34;color:#859900&#34;&gt;lambda&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;x&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;None&lt;/span&gt;):
    &lt;span style=&#34;color:#859900&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;modname&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Relavant outputs are&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;.....
&lt;span style=&#34;color:#268bd2&#34;&gt;coinor&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;dippy&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;examples&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;milp&lt;/span&gt;
&lt;span style=&#34;color:#268bd2&#34;&gt;coinor&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;dippy&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;examples&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;milp&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;__main__&lt;/span&gt;
&lt;span style=&#34;color:#268bd2&#34;&gt;coinor&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;dippy&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;examples&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;milp&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;milp_func&lt;/span&gt;
.....
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then I can simply use&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;coinor.dippy.examples.milp.milp_func&lt;/span&gt; &lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;formulate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;using-the-right-kernel-for-jupyter-notebook&#34;&gt;Using the right kernel for Jupyter Notebook&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# create virtual env with python 3.7.7, whose name is cuppy&lt;/span&gt;
conda create -n cuppy numpy scipy pandas notebook matplotlib &lt;span style=&#34;color:#268bd2&#34;&gt;python&lt;/span&gt;=3.7.7 
&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# activate cuppy&lt;/span&gt;
conda activate cuppy
&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# I am using zsh, you may change to bash&lt;/span&gt;
conda init zsh 
&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# activate virtual env&lt;/span&gt;
cond activate cuppy
&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# point this verison of Python to jupyter&lt;/span&gt;
ipython kernel install --name &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;cuppy&amp;#34;&lt;/span&gt; --user
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;running-jupyter-notebook-from-the-remote-server&#34;&gt;Running Jupyter Notebook from the remote server&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Reference&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;a href=&#34;https://ljvmiranda921.github.io/notebook/2018/01/31/running-a-jupyter-notebook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;set up jupyter notebook on login nodes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://benjlindsay.com/posts/running-jupyter-lab-remotely#running-on-a-compute-node&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;set up jupyter notebook on computation nodes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;On the server side:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create following two functions in the &lt;code&gt;.bashrc&lt;/code&gt; and reload it using &lt;code&gt;source .bashrc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; Inode(){
  &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# provide the computation node name; default is polyp2&lt;/span&gt;
  &lt;span style=&#34;color:#cb4b16&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;nodename&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;polyp2&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#cb4b16&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;starting an interactive section at &lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$nodename&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# start an interactive session in the given node&lt;/span&gt;
  qsub -l &lt;span style=&#34;color:#268bd2&#34;&gt;nodes&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;$nodename&lt;/span&gt;:ppn=&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;4&lt;/span&gt; -l &lt;span style=&#34;color:#268bd2&#34;&gt;walltime&lt;/span&gt;=1:00:00 -l &lt;span style=&#34;color:#268bd2&#34;&gt;mem&lt;/span&gt;=10gb,vmem=10gb -I
}
  
&lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; jpt(){
  &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# provide the port; default is 1234&lt;/span&gt;
  &lt;span style=&#34;color:#cb4b16&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;port&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;1234&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#cb4b16&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;open jupyter notebook at &lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;$(&lt;/span&gt;hostname&lt;span style=&#34;color:#859900&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$port&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# Fires-up a Jupyter notebook by supplying a specific port and ip&lt;/span&gt;
  jupyter notebook --no-browser --port=&lt;span style=&#34;color:#268bd2&#34;&gt;$port&lt;/span&gt; --ip=&lt;span style=&#34;color:#859900&#34;&gt;$(&lt;/span&gt;hostname&lt;span style=&#34;color:#859900&#34;&gt;)&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the server side&amp;rsquo;s terminal, if&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you want to start the jupyter notebook in the login node, just call &lt;code&gt;jpt&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;If you want to start the jupyter notebook in the computation node, call &lt;code&gt;Inode&lt;/code&gt; first and then when you are prompted to the computation node, then call &lt;code&gt;jpt&lt;/code&gt;. For example, if the comutation node name is &lt;code&gt;polyp3&lt;/code&gt;, then call &lt;code&gt;Inode polyp3&lt;/code&gt; and then call &lt;code&gt;jpt 1234&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;On the local side:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create following two functions in the &lt;code&gt;.bashrc&lt;/code&gt; and reload it using &lt;code&gt;source .bashrc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; jptt(){
    &lt;span style=&#34;color:#cb4b16&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;localport&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;2234&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#cb4b16&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;servername&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;polyp1&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#cb4b16&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;serverport&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;1234&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# Forwards port $1 into port $3 and listens to it&lt;/span&gt;
    ssh -N -f -L localhost:&lt;span style=&#34;color:#268bd2&#34;&gt;$localport&lt;/span&gt;:&lt;span style=&#34;color:#268bd2&#34;&gt;$servername&lt;/span&gt;:&lt;span style=&#34;color:#268bd2&#34;&gt;$serverport&lt;/span&gt; yud319@polyps.ie.lehigh.edu
}
&lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; stopjpt(){
  &lt;span style=&#34;color:#cb4b16&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;localport&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;2234&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
  lsof -i tcp:&lt;span style=&#34;color:#268bd2&#34;&gt;$localport&lt;/span&gt; |awk &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;NR &amp;gt; 1 {print $2}&amp;#39;&lt;/span&gt; | xargs &lt;span style=&#34;color:#cb4b16&#34;&gt;kill&lt;/span&gt; -9
  &lt;span style=&#34;color:#cb4b16&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;Kill port &lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$localport&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Call &lt;code&gt;jptt&lt;/code&gt; on the local terminal, which will listen to the jupyter notebook host on the server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the browser, if the port on local side is set to &lt;code&gt;2234&lt;/code&gt;, the just type &lt;code&gt;localhost::2234&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After finish the job, call &lt;code&gt;stopjpt&lt;/code&gt;, which will free the local port.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
